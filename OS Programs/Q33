#include <stdio.h>
#include <stdbool.h>

#define MAX_FRAMES 10
#define MAX_PAGES 50
#define INF 999999

int main() {
    int frames[MAX_FRAMES], pages[MAX_PAGES];
    int num_frames, num_pages;
    int page_faults = 0, next_frame = 0;

    printf("Enter the number of frames: ");
    scanf("%d", &num_frames);

    printf("Enter the number of pages: ");
    scanf("%d", &num_pages);

    printf("Enter the page reference string: ");
    for (int i = 0; i < num_pages; i++)
        scanf("%d", &pages[i]);

    for (int i = 0; i < num_frames; i++)
        frames[i] = -1;

    printf("\nPage Reference String: ");
    for (int i = 0; i < num_pages; i++)
        printf("%d ", pages[i]);

    printf("\n\nPage Faults:\n");
    for (int i = 0; i < num_pages; i++) {
        int page = pages[i];
        bool found = false;

        // Check if page is already in frames
        for (int j = 0; j < num_frames; j++) {
            if (frames[j] == page) {
                found = true;
                break;
            }
        }

        // If page is not in frames, find the page that will not be used for longest time
        if (!found) {
            int index = -1, farthest = -1;
            for (int j = 0; j < num_frames; j++) {
                int k;
                for (k = i + 1; k < num_pages; k++) {
                    if (frames[j] == pages[k]) {
                        if (k > farthest) {
                            farthest = k;
                            index = j;
                        }
                        break;
                    }
                }
                if (k == num_pages) {
                    index = j;
                    break;
                }
            }
            frames[index] = page;
            page_faults++;

            printf("Page %d -> ", page);
            for (int j = 0; j < num_frames; j++) {
                if (frames[j] != -1)
                    printf("%d ", frames[j]);
                else
                    printf("x ");
            }
            printf("\n");
        }
    }

    printf("\nTotal Page Faults: %d\n", page_faults);

    return 0;
}
